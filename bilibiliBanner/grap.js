const puppeteer=require("puppeteer"),fs=require("fs"),path=require("path");function countDirectories(a){let t=0;return fs.readdirSync(a).forEach((()=>{t++})),t}function sleep(a){return new Promise((t=>{setTimeout((()=>{t()}),a)}))}console.log("正在下载资源中...");let cnts=countDirectories(path.resolve(__dirname,"./images"));const folderPath=path.resolve(__dirname,"./images/"+(cnts+1));fs.mkdirSync(folderPath,{recursive:!0});const data=[];(async()=>{const a=await puppeteer.launch({headless:"new",args:["--no-sandbox","--disable-setuid-sandbox"]}),t=await a.newPage();t.setViewport({width:1650,height:800});try{await t.goto("https://www.bilibili.com/",{waitUntil:"domcontentloaded"}),await t.waitForSelector(".animated-banner"),await sleep(3e3);let a=await t.$$(".animated-banner .layer");for(let r=0;r<a.length;r++){const s=await t.evaluate((async a=>{const t={},{width:e,height:r,src:s,style:n,tagName:o}=a.firstElementChild,i=n.transform.match(/translate\(([-.\d]+)px, ([-.\d]+)px\)/);t.translateX=+i.slice(1)[0],t.translateY=+i.slice(1)[1];const c=+n.transform.match(/rotate\(([-.\d]+)deg\)/)[1];t.rotate=c;const l=+n.transform.match(/scale\(([.\d]+)\)/)[1];return t.scale=l,{tagName:o.toLowerCase(),opacity:[n.opacity],transform:t,width:e,height:r,src:s}}),a[r]);await e(s)}let r=await t.$(".animated-banner"),{x:s,y:n}=await r.boundingBox();await t.mouse.move(s+0,n+50),await t.mouse.move(s+1e3,n,{steps:1}),await sleep(1200),a=await t.$$(".animated-banner .layer");for(let e=0;e<a.length;e++){const r=await t.evaluate((async a=>{const{style:t}=a.firstElementChild,e=t.transform.match(/translate\(([-.\d]+)px, ([-.\d]+)px\)/),r=+t.transform.match(/rotate\(([-.\d]+)deg\)/)[1],s=+t.transform.match(/scale\(([.\d]+)\)/)[1];return[...e.slice(1).map((a=>+a)),r,s,t.opacity]}),a[e]);data[e].a=(r[0]-data[e].transform.translateX)/1e3,data[e].g=(r[1]-data[e].transform.translateY)/1e3,data[e].r=(r[2]-data[e].transform.rotate)/1e3,data[e].f=(r[3]-data[e].transform.scale)/1e3,data[e].opacity.push(r[4])}}catch(a){console.error("Error:",a)}async function e(a){const e=a.src.split("/"),r=e[e.length-1],s=`${folderPath}/${r}`,n=await t.evaluate((async a=>{const t=await fetch(a),e=await t.arrayBuffer();return{buffer:Array.from(new Uint8Array(e))}}),a.src),o=Buffer.from(n.buffer);fs.promises.writeFile(s,o).catch(console.error),data.push({...a,src:`/bilibiliBanner/images/${cnts+1}/${r}`})}fs.writeFileSync(`${folderPath}/data.json`,JSON.stringify(data,null,2)),console.log("正在写入本地文件..."),await sleep(300),await a.close(),console.log("banner 下载完毕")})();